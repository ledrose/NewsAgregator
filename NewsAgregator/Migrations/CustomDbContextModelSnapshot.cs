// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VueProjectBack.Data;

#nullable disable

namespace VueProjectBack.Migrations
{
    [DbContext(typeof(CustomDbContext))]
    partial class CustomDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VueProjectBack.Models.NewsItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SourceName");

                    b.ToTable("NewsItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Unknown",
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            SourceName = "Mail.ru",
                            Title = "Unknown",
                            Url = ""
                        });
                });

            modelBuilder.Entity("VueProjectBack.Models.Source", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RSSUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Name");

                    b.ToTable("Sources");

                    b.HasData(
                        new
                        {
                            Name = "Mail.ru",
                            RSSUrl = "https://news.mail.ru/rss/"
                        },
                        new
                        {
                            Name = "RT",
                            RSSUrl = "https://russian.rt.com/rss"
                        },
                        new
                        {
                            Name = "Медуза",
                            RSSUrl = "https://meduza.io/rss/all"
                        },
                        new
                        {
                            Name = "РИА новости",
                            RSSUrl = "https://ria.ru/export/rss2/archive/index.xml"
                        },
                        new
                        {
                            Name = "Лента",
                            RSSUrl = "https://lenta.ru/rss"
                        });
                });

            modelBuilder.Entity("VueProjectBack.Models.NewsItem", b =>
                {
                    b.HasOne("VueProjectBack.Models.Source", "Source")
                        .WithMany("NewsItems")
                        .HasForeignKey("SourceName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");
                });

            modelBuilder.Entity("VueProjectBack.Models.Source", b =>
                {
                    b.Navigation("NewsItems");
                });
#pragma warning restore 612, 618
        }
    }
}
